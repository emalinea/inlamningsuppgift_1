const express = require("express");
const path = require("path");
const db = require("./database"); // Anv√§nder funktioner fr√•n database.js
const app = express();

// üß† S√§tt EJS som template engine
app.set("view engine", "ejs");

// üßæ Middleware f√∂r att l√§sa formdata fr√•n formul√§r
app.use(express.urlencoded({ extended: true }));

// üåê Servera statiska filer fr√•n mappen Views (med stort V)
app.use(express.static(path.join(__dirname, "Views")));

// ‚úÖ Route: Startsidan ‚Äì visa alla anv√§ndare
app.get("/", async (req, res) => {
  try {
    const users = await db.getAllUsers();
    res.render("index", { users });
  } catch (err) {
    console.error("Fel vid h√§mtning av anv√§ndare:", err.message);
    res.status(500).send("Fel vid h√§mtning av anv√§ndare.");
  }
});

// ‚úÖ Route: Visa formul√§r f√∂r att skapa ny anv√§ndare
app.get("/create", (req, res) => {
  res.render("create");
});

// ‚úÖ Route: Hantera POST ‚Äì skapa ny anv√§ndare
app.post("/create", async (req, res) => {
  const { name, nickname, age, bio } = req.body;

  if (!name || !nickname || !age || !bio) {
    return res.status(400).send("Alla f√§lt m√•ste fyllas i.");
  }

  try {
    await db.addUser({ name, nickname, age: parseInt(age), bio });
    res.redirect("/");
  } catch (err) {
    console.error("Fel vid skapande:", err.message);
    res.status(500).send("N√•got gick fel vid skapande av anv√§ndare.");
  }
});

// ‚úÖ Route: Visa en anv√§ndares profilsida
app.get("/user", async (req, res) => {
  try {
    const user = await db.getUserById(req.query.id);
    res.render("profile", { user });
  } catch (err) {
    console.error("Fel vid h√§mtning av anv√§ndare:", err.message);
    res.status(500).send("Kunde inte h√§mta anv√§ndare.");
  }
});

// ‚úÖ Route: Visa formul√§r f√∂r att redigera anv√§ndare
app.get("/edit", async (req, res) => {
  try {
    const user = await db.getUserById(req.query.id);
    res.render("edit", { user });
  } catch (err) {
    console.error("Fel vid h√§mtning f√∂r redigering:", err.message);
    res.status(500).send("Kunde inte h√§mta anv√§ndare f√∂r redigering.");
  }
});

// ‚úÖ Route: Hantera borttagning av anv√§ndare
app.post("/users/:id/delete", async (req, res) => {
  try {
    await db.deleteUser(req.params.id);
    res.redirect("/");
  } catch (err) {
    console.error("Fel vid borttagning:", err.message);
    res.status(500).send("Kunde inte ta bort anv√§ndare.");
  }
});

// ‚úÖ Starta servern
const PORT = 5500;
app.listen(PORT, () => {
  console.log(`Servern k√∂rs p√• http://localhost:${PORT}`);
});